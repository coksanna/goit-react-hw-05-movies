{"version":3,"file":"static/js/937.bc3a3709.chunk.js","mappings":"yNAoCA,UAhC+B,WAC7B,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEEC,EAAAA,EAAAA,IAAWP,GAFb,OAEXQ,EAFW,OAGjBJ,EAAWI,GAHM,gDAIRC,EAJQ,KAIRA,SACTC,QAAQC,IAAIF,EAASD,KAAKI,SALT,yDAAH,qDAQlBN,GACD,GAAE,CAACN,KAGF,+BACE,wBACGG,EAAQU,KAAI,SAAAC,GACX,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOd,GAKnB,OAIR,C,sLChCKiB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,8BAETC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACFP,EAASQ,IAAT,gBAA8B,CACnDL,OAAQ,CACNI,KAAAA,EACAD,MAAAA,KAJqB,uBACjBf,EADiB,EACjBA,KAMRE,QAAQC,IAAI,QAASH,EAAKkB,SAPD,kBAQlBlB,EAAKkB,SARa,2CAAH,sDAWXC,EAAc,mCAAG,2GAAOH,EAAP,+BAAc,EAAd,SACLP,EAASQ,IAAT,mCAAyCD,IADpC,uBACpBhB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAUdoB,EAAc,mCAAG,WAAM5B,GAAN,yFACLiB,EAASQ,IAAT,iBAAuBzB,IADlB,uBACpBQ,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdqB,EAAY,mCAAG,WAAM7B,GAAN,yFACHiB,EAASQ,IAAT,iBAAuBzB,EAAvB,aADG,uBAClBQ,EADkB,EAClBA,KADkB,kBAEnBA,EAAKsB,MAFc,2CAAH,sDAKZvB,EAAU,mCAAG,WAAMP,GAAN,yFACDiB,EAASQ,IAAT,iBAAuBzB,EAAvB,aADC,uBAChBQ,EADgB,EAChBA,KADgB,kBAEjBA,EAAKkB,SAFY,2CAAH,qD","sources":["pages/SingleMoviePageReview/SingleMoviePageReview.jsx","servises/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../servises/movies-api';\n\nconst SingleMoviePageReviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const data = await getReviews(id);\n        setReviews(data);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <>\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default SingleMoviePageReviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https:/api.themoviedb.org/3',\n\n  params: {\n    api_key: 'a1735b4b403b356dec5f0993d9adcd8f',\n  },\n});\n\nexport const searchMovie = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      page,\n      query,\n    },\n  });\n  console.log('movie', data.results);\n  return data.results;\n};\n\nexport const getTrendMovies = async (page = 1) => {\n  const { data } = await instance.get(`/trending/movie/day?page=${page}`);\n  return data;\n};\n\nexport const fetchGenres = async () => {\n  const { data } = await instance.get(`/genre/movie/list`);\n  return data.genres;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n\n// export const getPostById = async id => {\n//   const { data } = await instance.get(`/${id}`);\n//   return data;\n// };\n\n// export const getCommentByPostId = async id => {\n//   const { data } = await instance.get(`/${id}/comments`);\n//   return data;\n// };\n"],"names":["id","useParams","useState","reviews","setReviews","useEffect","fetchReviews","getReviews","data","response","console","log","message","map","review","author","content","instance","axios","baseURL","params","api_key","searchMovie","query","page","get","results","getTrendMovies","fetchMovieById","fetchCredits","cast"],"sourceRoot":""}