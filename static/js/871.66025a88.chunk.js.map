{"version":3,"file":"static/js/871.66025a88.chunk.js","mappings":"yNAkCA,UA9BgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,IAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAEEC,EAAAA,EAAAA,IAAWP,GAFb,OAEXQ,EAFW,OAGjBJ,EAAWI,GAHM,gDAIRC,EAJQ,KAIRA,SACTC,QAAQC,IAAIF,EAASD,KAAKI,SALT,yDAAH,qDAQlBN,GACD,GAAE,CAACN,IAEAG,EAAQU,OAAQ,CAClB,IAAMC,EAAWX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASjB,EAApB,EAAoBA,GAApB,OAC3B,2BACE,oCAAYgB,MACZ,uBAAIC,MAFGjB,EADkB,IAO7B,OAAO,wBAAKc,GACb,CACC,OAAO,qEAEV,C,sLC9BKI,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,8BAETC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACFP,EAASQ,IAAT,gBAA8B,CACnDL,OAAQ,CACNI,KAAAA,EACAD,MAAAA,KAJqB,uBACjBhB,EADiB,EACjBA,KADiB,kBAOlBA,EAAKmB,SAPa,2CAAH,sDAUXC,EAAc,mCAAG,2GAAOH,EAAP,+BAAc,EAAd,SACLP,EAASQ,IAAT,mCAAyCD,IADpC,uBACpBjB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAUdqB,EAAc,mCAAG,WAAM7B,GAAN,yFACLkB,EAASQ,IAAT,iBAAuB1B,IADlB,uBACpBQ,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdsB,EAAY,mCAAG,WAAM9B,GAAN,yFACHkB,EAASQ,IAAT,iBAAuB1B,EAAvB,aADG,uBAClBQ,EADkB,EAClBA,KADkB,kBAEnBA,EAAKuB,MAFc,2CAAH,sDAKZxB,EAAU,mCAAG,WAAMP,GAAN,yFACDkB,EAASQ,IAAT,iBAAuB1B,EAAvB,aADC,uBAChBQ,EADgB,EAChBA,KADgB,kBAEjBA,EAAKmB,SAFY,2CAAH,qD","sources":["pages/Reviews/Reviews.jsx","servises/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../servises/movies-api';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const data = await getReviews(id);\n        setReviews(data);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  if (reviews.length) {\n    const elements = reviews.map(({ author, content, id }) => (\n      <li key={id}>\n        <p>Author: {author}</p>\n        <p>{content}</p>\n      </li>\n    ));\n\n    return <ul>{elements}</ul>;\n  } else {\n    return <h3>We don't have any reviews for this movie.</h3>;\n  }\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https:/api.themoviedb.org/3',\n\n  params: {\n    api_key: 'a1735b4b403b356dec5f0993d9adcd8f',\n  },\n});\n\nexport const searchMovie = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      page,\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getTrendMovies = async (page = 1) => {\n  const { data } = await instance.get(`/trending/movie/day?page=${page}`);\n  return data;\n};\n\n// export const fetchGenres = async () => {\n//   const { data } = await instance.get(`/genre/movie/list`);\n//   return data.genres;\n// };\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["id","useParams","useState","reviews","setReviews","useEffect","fetchReviews","getReviews","data","response","console","log","message","length","elements","map","author","content","instance","axios","baseURL","params","api_key","searchMovie","query","page","get","results","getTrendMovies","fetchMovieById","fetchCredits","cast"],"sourceRoot":""}