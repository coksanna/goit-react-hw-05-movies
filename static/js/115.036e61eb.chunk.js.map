{"version":3,"file":"static/js/115.036e61eb.chunk.js","mappings":"yNA6CA,UAvCa,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,IAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAEKC,EAAAA,EAAAA,IAAaP,GAFlB,OAERQ,EAFQ,OAGdJ,EAAQI,GAHM,gDAILC,EAJK,KAILA,SACTC,QAAQC,IAAIF,EAASD,KAAKI,SALZ,yDAAH,qDAQfN,GACD,GAAE,CAACN,IAEAG,EAAKU,OAAQ,CACf,IAAMC,EAAWX,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,QAAlC,OACxB,2BACE,gBACEC,MAAM,MACNC,IACEL,EAAY,yCAC0BA,GAClC,kHAENM,IAAKL,KAEP,uBAAIA,KACJ,uCAAeC,OAXRC,EADe,IAgB1B,OAAO,wBAAKL,GACb,CACC,OAAO,kEAEV,C,sLCzCKS,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAETC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACFP,EAASQ,IAAT,gBAA8B,CACnDL,OAAQ,CACNI,KAAAA,EACAD,MAAAA,KAJqB,uBACjBrB,EADiB,EACjBA,KADiB,kBAOlBA,EAAKwB,SAPa,2CAAH,sDAUXC,EAAc,mCAAG,2GAAOH,EAAP,+BAAc,EAAd,SACLP,EAASQ,IAAT,mCAAyCD,IADpC,uBACpBtB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKd0B,EAAc,mCAAG,WAAMlC,GAAN,yFACLuB,EAASQ,IAAT,iBAAuB/B,IADlB,uBACpBQ,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdD,EAAY,mCAAG,WAAMP,GAAN,yFACHuB,EAASQ,IAAT,iBAAuB/B,EAAvB,aADG,uBAClBQ,EADkB,EAClBA,KADkB,kBAEnBA,EAAKL,MAFc,2CAAH,sDAKZgC,EAAU,mCAAG,WAAMnC,GAAN,yFACDuB,EAASQ,IAAT,iBAAuB/B,EAAvB,aADC,uBAChBQ,EADgB,EAChBA,KADgB,kBAEjBA,EAAKwB,SAFY,2CAAH,qD","sources":["pages/Cast/Cast.jsx","servises/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCredits } from '../../servises/movies-api';\n// import Loader from 'components/Loader/Loader';\n// import Notification from 'components/Notification/Notification';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const data = await fetchCredits(id);\n        setCast(data);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  if (cast.length) {\n    const elements = cast.map(({ profile_path, name, character, cast_id }) => (\n      <li key={cast_id}>\n        <img\n          width=\"300\"\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w300${profile_path}`\n              : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n          }\n          alt={name}\n        />\n        <p>{name}</p>\n        <p>Character: {character}</p>\n      </li>\n    ));\n\n    return <ul>{elements}</ul>;\n  } else {\n    return <h3>We don't have any cast for this movie.</h3>;\n  }\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: 'a1735b4b403b356dec5f0993d9adcd8f',\n  },\n});\n\nexport const searchMovie = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      page,\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getTrendMovies = async (page = 1) => {\n  const { data } = await instance.get(`/trending/movie/day?page=${page}`);\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["id","useParams","useState","cast","setCast","useEffect","fetchCast","fetchCredits","data","response","console","log","message","length","elements","map","profile_path","name","character","cast_id","width","src","alt","instance","axios","baseURL","params","api_key","searchMovie","query","page","get","results","getTrendMovies","fetchMovieById","getReviews"],"sourceRoot":""}