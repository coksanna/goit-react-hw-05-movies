{"version":3,"file":"static/js/127.417fecfa.chunk.js","mappings":"yNAyCA,UAnC4B,WAC1B,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAEKC,EAAAA,EAAAA,IAAaP,GAFlB,OAERQ,EAFQ,OAGdJ,EAAQI,GAHM,gDAILC,EAJK,KAILA,SACTC,QAAQC,IAAIF,EAASD,KAAKI,SALZ,yDAAH,qDAQfN,GACD,GAAE,CAACN,IAEJ,IAAMa,EAAWV,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,QAAlC,OACxB,2BACE,gBACEC,MAAM,MACNC,IACEL,EAAY,yCAC0BA,GAClC,kHAENM,IAAKL,KAEP,uBAAIA,KACJ,uCAAeC,OAXRC,EADe,IAgB1B,OAAO,wBAAKL,GACb,C,sLCrCKS,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,8BAETC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACFP,EAASQ,IAAT,gBAA8B,CACnDL,OAAQ,CACNI,KAAAA,EACAD,MAAAA,KAJqB,uBACjBpB,EADiB,EACjBA,KAMRE,QAAQC,IAAI,QAASH,EAAKuB,SAPD,kBAQlBvB,EAAKuB,SARa,2CAAH,sDAWXC,EAAc,mCAAG,2GAAOH,EAAP,+BAAc,EAAd,SACLP,EAASQ,IAAT,mCAAyCD,IADpC,uBACpBrB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAUdyB,EAAc,mCAAG,WAAMjC,GAAN,yFACLsB,EAASQ,IAAT,iBAAuB9B,IADlB,uBACpBQ,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdD,EAAY,mCAAG,WAAMP,GAAN,yFACHsB,EAASQ,IAAT,iBAAuB9B,EAAvB,aADG,uBAClBQ,EADkB,EAClBA,KADkB,kBAEnBA,EAAKL,MAFc,2CAAH,sDAKZ+B,EAAU,mCAAG,WAAMlC,GAAN,yFACDsB,EAASQ,IAAT,iBAAuB9B,EAAvB,aADC,uBAChBQ,EADgB,EAChBA,KADgB,kBAEjBA,EAAKuB,SAFY,2CAAH,qD","sources":["pages/SingleMoviePageCast/SingleMoviePageCast.jsx","servises/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCredits } from '../../servises/movies-api';\n// import Loader from 'components/Loader/Loader';\n// import Notification from 'components/Notification/Notification';\n\nconst SingleMoviePageCast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const data = await fetchCredits(id);\n        setCast(data);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  const elements = cast.map(({ profile_path, name, character, cast_id }) => (\n    <li key={cast_id}>\n      <img\n        width=\"300\"\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w300${profile_path}`\n            : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n        }\n        alt={name}\n      />\n      <p>{name}</p>\n      <p>Character: {character}</p>\n    </li>\n  ));\n\n  return <ul>{elements}</ul>;\n};\n\nexport default SingleMoviePageCast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https:/api.themoviedb.org/3',\n\n  params: {\n    api_key: 'a1735b4b403b356dec5f0993d9adcd8f',\n  },\n});\n\nexport const searchMovie = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      page,\n      query,\n    },\n  });\n  console.log('movie', data.results);\n  return data.results;\n};\n\nexport const getTrendMovies = async (page = 1) => {\n  const { data } = await instance.get(`/trending/movie/day?page=${page}`);\n  return data;\n};\n\nexport const fetchGenres = async () => {\n  const { data } = await instance.get(`/genre/movie/list`);\n  return data.genres;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n\n// export const getPostById = async id => {\n//   const { data } = await instance.get(`/${id}`);\n//   return data;\n// };\n\n// export const getCommentByPostId = async id => {\n//   const { data } = await instance.get(`/${id}/comments`);\n//   return data;\n// };\n"],"names":["id","useParams","useState","cast","setCast","useEffect","fetchCast","fetchCredits","data","response","console","log","message","elements","map","profile_path","name","character","cast_id","width","src","alt","instance","axios","baseURL","params","api_key","searchMovie","query","page","get","results","getTrendMovies","fetchMovieById","getReviews"],"sourceRoot":""}